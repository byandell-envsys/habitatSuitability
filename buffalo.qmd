---
title: "hist"
format:
  html:
    code-fold: true
jupyter: python3
---

This file will not render properly as it is stuck on rendering with the default python (3.9.6). See [simple.qmd](https://github.com/byandell-envsys/habitatSuitability/blob/main/simple.qmd) for a way to examine environments.

```{python}
import sys
print(sys.executable)
print(sys.version)
```

# Buffalo Grasslands Habitat Suitability

This project examines habitat suitability for [Blue Stem](https://greg.app/big-bluestem-soil/) in the [Buffalo Gap](https://www.fs.usda.gov/recarea/nebraska/recarea/?recid=30329) and [Oglala](https://www.fs.usda.gov/recarea/nebraska/recarea/?recid=30328) National Grasslands. These grasslands contiguous, located in [Oceti Sakowin Oyate](https://americanindian.si.edu/nk360/plains-belonging-nation/oceti-sakowin), also known as the Lakota Nation or Great Sioux Nation, and in the US states of South Dakota and Nebraska.

Blue Stem, according to [Greg](https://greg.app/), "need well-drained, nutrient-rich soils. The best soil types for this grass are sandy loam or loamy soil, which provide the right balance of drainage and nutrients. Aim for an organic matter content of 5-10%. This range is crucial for optimal growth, as it enhances soil fertility and structure. The ideal pH range for Big Bluestem is between 6.0 and 7.0. This slightly acidic to neutral pH is essential for nutrient availability, ensuring your plants can absorb what they need to thrive."

[Gardners.com](https://www.gardeners.com/how-to/what-type-of-soil-do-you-have/9120.html#:~:text=Most%20common%20garden%20plants%20prefer,well%2Dadapted%20to%20clay%20soils.) has a [soil simplex figure](https://www.gardeners.com/globalassets/articles/gardening/2014content/9120-soil-texture-triangle-sample.png?$staticlink$), which puts sandy loam and loamy sand at 50-85% sand.

![](https://www.gardeners.com/globalassets/articles/gardening/2014content/9120-soil-texture-triangle-sample.png?$staticlink$){fig-align="center"}

I don't seem to have information on slope or aspect, but I have seen blue stem on flat areas and slopes.

### Project Specs

The project should compare

-   two grassland habitats: Buffalo Gap and Oglala National Grasslands
-   one species: Blue Stem
-   one soil measurement: percent sand, and maybe pH
-   two climate scenarios: (e.g. different time periods, different emission scenarios)
    -   [Relative concentration pathways (RCPs)](https://coastadapt.com.au/infographics/what-are-rcps) 4.5 (current) and 8.5 (worse case)
-   one elevation: slope
-   fuzzy model based on above description

### Pseudocode

The pseudocode below relies on routines I developed with guidance from course instructors and fellow students, organized in the package [landmapy](https://github.com/byandell-envsys/landmapy). Workflows cited above have more detail on use and initial plots.

For each grassland (start with one), conduct the following steps. These will be laid out in 1-4 separate notebooks per grassland; ideally, code form one grassland will be developed in a generic way with functions to be reusable ([DRY](https://www.getdbt.com/blog/guide-to-dry)).

0.  Create GeoDataFrame `buffalo_gdf` is created in step 0 and then stored for later retrieval.
1.  Soil and Climate Measures
    1.  Soil measure is `mean` of `sand` at depth `100-200m` is created (ignoring `buffer` of `0.1`) with functions
        -   `buffalo_da = merge_soil(buffalo_gdf, "sand", "mean", "100_200")`
        -   `gdf_over_da(buffalo_gdf, buffalo_da)`
    2.  Climate measures are projections of precipation `pr`
        -   [representative concentration pathway](https://sedac.ciesin.columbia.edu/ddc/ar5_scenario_process/RCPs.html) scenarios `rcp45`, `rcp85`
        -   `maca_df = process_maca({'buffalo': buffalo_gdf}, ['pr'], ['rcp85', 'rcp45'], [2026])`
        -   `maca_2027_year_da = maca_year(maca_df, 0, 2027)` \# 0 = `rcp85`, 1 = `rcp45`
        -   `gdf_over_da(buffalo_gdf, maca_2027_year_da)`
2.  Digital Elevation measure `slope`
    -   `srtm_da = srtm_download(buffalo_gdf, elevation_dir, 0.1)`
    -   `slope_da = srtm_slope(srtm_da)`
    -   `gdf_over_da(buffalo_gdf, slope_da)`
3.  Harmonize data
    -   `buffalo_sand_da = buffalo_da.rio.reproject_match(slope_da)`
    -   `maca_2027_da = maca_2027_year_da.rio.reproject_match(slope_da)`
    -   similar reproject idea for soil and climate variables
4.  Build fuzzy model
    -   use hill functions to transform harmonized DataArrays into 0-1 DataArrays
    -   multiply them together
    -   `ramp_logic(maca_2027_da, (500, 550), (700, 750)).plot()`
    -   `ramp_logic(buffalo_sand_da, (50, 60), (80, 90)).plot()`
    -   `ramp_logic(slope_da, (0, 5), (15, 20)).plot()`

Workflow details were developed in separate jupyter notebooks. Working documents that contribute to this workflow are as follows.

-   [0_study_area](https://github.com/byandell-envsys/habitatSuitability/blob/main/0_study_area.ipynb)
-   [1_1_soil](https://github.com/byandell-envsys/habitatSuitability/blob/main/1_1_soil.ipynb)
-   [1_2_climate](https://github.com/byandell-envsys/habitatSuitability/blob/main/1_2_climate.ipynb)
-   [2_slope](https://github.com/byandell-envsys/habitatSuitability/blob/main/2_slope.ipynb)
-   [3_harmonize](https://github.com/byandell-envsys/habitatSuitability/blob/main/3_harmonize.ipynb)
-   [4_build](https://github.com/byandell-envsys/habitatSuitability/blob/main/4_build.ipynb)

## Create Buffalo GeoDataFrame

Proposed sites are two contiguous national grasslands located in Oceti Sakowin Oyate, also known as Great Lakota Nation and the US states of South Dakota and Nebraska. They are [Buffalo Gap National Grassland](https://www.fs.usda.gov/recarea/nebraska/recarea/?recid=30329) and [Oglala National Grassland](https://www.fs.usda.gov/recarea/nebraska/recarea/?recid=30328)

A GeoDataFrame `buffalo_gdf` is created and stored for later retrieval. See [0_study_area](https://github.com/byandell-envsys/habitatSuitability/blob/main/0_study_area.ipynb). We use the `plot_redline()` function from [landmapy.redline](https://github.com/byandell-envsys/landmapy/blob/main/landmapy/redline.py) module to visualize.

### Grassland References

-   [Buffalo Gap National Grassland](https://www.fs.usda.gov/recarea/nebraska/recarea/?recid=30329)
    -   [Recreation Area](https://www.fs.usda.gov/detail/r2/recreation?cid=stelprdb5389082)
    -   [Natural Atlas](https://naturalatlas.com/national-grasslands/buffalo-gap-2096999)
    -   [Data Download](https://data-usfs.hub.arcgis.com/datasets/usfs::national-grassland-units-feature-layer/explore?location=43.534637%2C-102.565490%2C8.34)
    -   (OBJECTID 186937, NATIONALGRASSLANDID 295518010328)\
-   [Oglala National Grassland](https://www.fs.usda.gov/recarea/nebraska/recarea/?recid=30328)
    -   [Visit](https://visitnebraska.com/harrison/oglala-national-grassland)
    -   [Data Download](https://data-usfs.hub.arcgis.com/datasets/usfs::national-grassland-units-feature-layer/explore?location=43.509639%2C-102.570535%2C8.36)
    -   (OBJECTID 186940, NATIONALGRASSLANDID 295521010328)

### Python Code

```{python}
# Define and create the project data directory
import os # Interoperable file paths
import pathlib # Find the home folder

data_dir = os.path.join(
    pathlib.Path.home(),
    'earth-analytics',
    'data',
    'habitat'
)
os.makedirs(data_dir, exist_ok=True)
data_dir
```

```{python}
import geopandas as gpd
grassland_url = data_dir + "/National_Grassland_Units_(Feature_Layer).geojson"
print(grassland_url)

grassland_gdf = gpd.read_file(grassland_url)
```

```{python}
from landmapy.redline import plot_redline

buffalo_gdf = grassland_gdf.loc[grassland_gdf['GRASSLANDNAME'].isin(
                                 ["Buffalo Gap National Grassland", "Oglala National Grassland"])]

plot_redline(buffalo_gdf)
```

## Soil and Climate Measures

Download soil raster layer for **sand** covering study area envelope using the [POLARIS dataset](http://hydrology.cee.duke.edu/POLARIS/PROPERTIES/v1.0/). Considering `sand` percentage `mean`. POLARIS data are available at 6 depths, and Bluestem has roots down to 5 feet (150 cm), which is the lowest strata measured (100-200 cm). Data in the [sand 100-200 cm directory](http://hydrology.cee.duke.edu/POLARIS/PROPERTIES/v1.0/sand/mean/100_200/) are saved as separate tif files by longitude. Buffalo Gap National Grassland is at (centroid) 43.4375째 N, 103.0505째 W, while Oglala National Grassland is at 42.9404째 N, 103.5900째 W. Below we use the `.total_bounds` extension on `buffalo_gdf` with the `merge_soil()` function in the [landmapy.habitat](https://github.com/byandell-envsys/landmapy/blob/main/landmapy/habitat.py) module to automate finding bounds.

-   [POLARIS: 30-meter probabilistic soil series map of contiguous US](https://pubs.usgs.gov/publication/70170912)
    -   <https://scholars.duke.edu/publication/1381493>
    -   <https://gee-community-catalog.org/projects/polaris/>
    -   NW Chaney et al. (2019) POLARIS Soil Properties: 30-m Probabilistic Maps of Soil Properties Over the Contiguous United States. [DOI: 10.1029/2018WR022797](https://doi.org/10.1029/2018WR022797)
-   Elsa Culler EarthLab Videos
    -   [Accessing and formatting URLS for POLARIS data](https://cuboulder.zoom.us/rec/share/imhCGJcrCgSoE1cJjg02r86GMNjiRz0jwVMJ5c0uWNwBCD5D_0kLSl3CaqLdDI2a.ucGta1EEAiirDUop)
    -   [Looping through multiple tiles of POLARIS data](https://cuboulder.zoom.us/rec/share/3S7pGOSv7jztZTvg4RSXLj-GicnHwusIDIEDoETZbUN7ivkc6Ryi5GAJyX9Ly6h2.VXl6iFmLChjjUyOg)

### Python Code

```{python}
from landmapy.habitat import create_data_dir, merge_soil, maca_year, process_maca
from landmapy.index import redline_over_index
import rioxarray as rxr
```

```{python}
data_dir = create_data_dir('habitat')
data_dir
```

Merge soil tiles to create `buffalo_da`.

```{python}
print(buffalo_gdf.total_bounds)
%store -r buffalo_da
try:
    buffalo_da
except NameError:
    buffalo_da = merge_soil(buffalo_gdf)
    %store buffalo_da
    print("buffalo_da created and stored")
else:
    print("buffalo_da already exists")
```

```{python}
buffalo_gdf['color'] = ['white','red']
redline_over_index(buffalo_gdf, buffalo_da, cmap='viridis')
```

### Sand Soil Measurement

Get and show `mean` of `sand` at depth `100-200m` with functions

-   `buffalo_da = merge_soil(buffalo_gdf, "sand", "mean", "100_200")`
-   `gdf_over_da(buffalo_gdf, buffalo_da)`

### Climate Precipitation Measure

Project precipation `pr` under representative concentration pathway scenarios `rcp45` and `rcp85` for years `2026-2030`.

-   `maca_df = process_maca({'buffalo': buffalo_gdf}, ['pr'], ['rcp85', 'rcp45'], [2026])`
-   `maca_2027 = maca_year(maca_df, 0, 2027)` \# 0 = `rcp85`, 1 = `rcp45`
-   `gdf_over_da(buffalo_gdf, maca_2027)`

## Slope Elevation variable `slope`

-   `srtm_da = srtm_download(buffalo_gdf, elevation_dir, 0.1)`
-   `slope_da = srtm_slope(srtm_da)`
-   `gdf_over_da(buffalo_gdf, slope_da)`

## Harmonize data

See [3_harmonize](https://github.com/byandell-envsys/habitatSuitability/blob/main/3_harmonize.ipynb).

## Fuzzy Model

-   use hill functions to transform harmonized DataArrays into 0-1 DataArrays
-   multiply them together

See [4_build](https://github.com/byandell-envsys/habitatSuitability/blob/main/4_build.ipynb)